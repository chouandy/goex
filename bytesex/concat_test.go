package bytesex

import (
	"fmt"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestConcat(t *testing.T) {
	// Set test cases
	testCases := []struct {
		slices   [][]byte
		expected []byte
	}{
		{
			slices: [][]byte{
				[]byte{
					0xdc, 0x98, 0x37, 0x6c, 0x5d, 0x5c, 0xa, 0xe7,
				},
				[]byte{
					0x77, 0xd1, 0x2f, 0x56, 0xe7, 0x67, 0xf3, 0x55,
				},
				[]byte{
					0xf9, 0xc8, 0x6d, 0x6d, 0x79, 0xb3, 0xf8, 0xc8,
				},
				[]byte{
					0x17, 0x9f, 0x77, 0x10, 0xd3, 0xf5, 0x49, 0xf9,
				},
			},
			expected: []byte{
				0xdc, 0x98, 0x37, 0x6c, 0x5d, 0x5c, 0xa, 0xe7,
				0x77, 0xd1, 0x2f, 0x56, 0xe7, 0x67, 0xf3, 0x55,
				0xf9, 0xc8, 0x6d, 0x6d, 0x79, 0xb3, 0xf8, 0xc8,
				0x17, 0x9f, 0x77, 0x10, 0xd3, 0xf5, 0x49, 0xf9,
			},
		},
		{
			slices: [][]byte{
				[]byte{
					0x17, 0x9f, 0x77, 0x10, 0xd3, 0xf5, 0x49, 0xf9,
				},
				[]byte{
					0xf9, 0xc8, 0x6d, 0x6d, 0x79, 0xb3, 0xf8, 0xc8,
				},
				[]byte{
					0xdc, 0x98, 0x37, 0x6c, 0x5d, 0x5c, 0xa, 0xe7,
				},
				[]byte{
					0x77, 0xd1, 0x2f, 0x56, 0xe7, 0x67, 0xf3, 0x55,
				},
			},
			expected: []byte{
				0x17, 0x9f, 0x77, 0x10, 0xd3, 0xf5, 0x49, 0xf9,
				0xf9, 0xc8, 0x6d, 0x6d, 0x79, 0xb3, 0xf8, 0xc8,
				0xdc, 0x98, 0x37, 0x6c, 0x5d, 0x5c, 0xa, 0xe7,
				0x77, 0xd1, 0x2f, 0x56, 0xe7, 0x67, 0xf3, 0x55,
			},
		},
	}

	for i, testCase := range testCases {
		t.Run(fmt.Sprintf("TestCase[%d]", i+1), func(t *testing.T) {
			assert.Equal(t, testCase.expected, Concat(testCase.slices))
		})
	}
}
